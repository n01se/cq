(* See also: https://github.com/fadado/JBOL/blob/master/doc/JQ-language-grammar.md *)

statements = module? import* defs
module = "module" exp00 ";"
import = "import"  str "as" "$"? ident exp00? ";" |
         "include" str exp00? ";"

def = <ws>? <"def"> <ws> ident (params|"") <ws>? <":"> exp00 <ws>? <";">
defs = def* exp00
params = <ws>? <"("> param (<ws>? <";"> param)* <ws>? <")">
param = <ws>? "$"? ident

as = <ws> <"as"> <ws> "$" ident

exp00 = <ws>? "if" <ws>? exp05 <ws> <"then"> exp05 <ws> <"else"> exp05 <ws> <"end"> |
        exp05
exp05 = exp10 (as? <ws>? "|" exp10)*
exp10 = exp20 (<ws>? "," exp20)*
exp20 = exp30
exp30 = exp40 (<ws>? "|=" exp40)?
exp40 = exp50
exp50 = exp60 (<ws>? ("!="|"=="|"<"|">"|"<="|">=") exp60)*
exp60 = exp70 (<ws>? ("+"|"-") exp70)*
exp70 = exp80 (<ws>? "*" exp80)*
exp80 = exp90 "?"?
exp90 =
     <ws>? "{" (obj-entry (<ws>? <","> obj-entry)* )? <ws>? <"}"> |
     exp80 <ws>? "[" (exp00 (<ws>? <":"> exp00)?)? <ws>? <"]"> |
     exp80? <ws>? "." ( ident | str ) |
     <ws>? "." |
     <ws>? ".." |
     <ws>? vector |
     <ws>? number |
     <ws>? str |
     <ws>? invoke |
     <ws>? "$" ident |
     <ws>? <"("> exp00 <ws>? <")"> |
     <ws>? format |
     <ws>? format-interp

vector = <"["> exp00? <"]">
obj-entry = exp90 (<":"> exp00)?
format-interp = format <ws>? str
invoke = ident ( <"("> ( exp00 (<";"> exp00)* )? <")"> )?

istr = #"([^\"\\]|\\[^u(]|\\u....)*"
str = <'"'> istr <'"'> |
      <'"'> istr <"\\("> exp00
        ( <')'> istr <"\\("> exp00 )*
      <')'> istr <'"'>

format = <"@"> #"[a-zA-Z0-9_]+"

key = ident | str
number = #"-?[0-9]+([.][0-9]+)?"
ident = #"([a-zA-Z_][a-zA-Z_0-9]*::)*[a-zA-Z_][a-zA-Z_0-9]*"
ws = #"\s+"
