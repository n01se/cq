(* See also: https://github.com/fadado/JBOL/blob/master/doc/JQ-language-grammar.md *)

statements = module? import* defs
module = "module" exp00 ";"
import = "import"  string "as" "$"? ident exp00? ";" |
         "include" string exp00? ";"

def = <"def"> ident (params|"") <":"> exp00 <";">
defs = def* exp00
params = <"("> param (<";"> param)* <")">
param = "$"? ident

as = <"as"> "$" ident

exp00 = "if" exp05 <"then"> exp05 <"else"> exp05 <"end"> |
        exp05
exp05 = exp10 (as? "|" exp10)*
exp10 = exp20 ("," exp20)*
exp20 = exp30
exp30 = exp40 ("|=" exp40)?
exp40 = exp50
exp50 = exp60 (("!="|"=="|"<"|">"|"<="|">=") exp60)*
exp60 = exp70 (("+"|"-") exp70)*
exp70 = exp90 ("*" exp90)*
exp90 =
     number |
     string |
     invoke |
     "$" ident |
     "." |
     exp90? "[" exp00? "]" |
     <"("> exp00 <")">

invoke = ident ( <"("> ( exp00 (<";"> exp00)* )? <")"> )?

number = #"-?[0-9]+([.][0-9]+)?"
string = format? '"' qqstring '"'
format = #"@[a-zA-Z0-9_]+"
qqstring = #"\"[^\"]*\""
ident = #"([a-zA-Z_][a-zA-Z_0-9]*::)*[a-zA-Z_][a-zA-Z_0-9]*"
